sp {propose*new-scout
   (state <s> ^name Soar-SC
              ^io.input-link <input-link>)
   (<input-link> ^fog-tiles <fog-tiles>
                 ^units.unit <scv>
                 ^types.type <scv-type>)
   (<scv-type> ^name |Terran SCV|
               ^id <scv-type-id>)
   (<scv> ^type <scv-type-id>
          ^idle 1
          ^id <scv-id>)
   -{(<input-link> ^unit.unit <other-scv>)
     (<other-scv> ^scouting 1)}
-->
   (<s> ^operator <scout-operator> + >)
   (<scout-operator> ^name scout
                     ^id <scv-id>)
}

sp {apply*new-scout
   (state <s> ^operator <o>
              ^io.input-link.units.unit <scv>)
   (<o> ^name scout
        ^id <scv-id>)
   (<scv> ^id <scv-id>)
-->
   (<scv> ^scouting 1
          ^last-scout-tile <tile>)
   (<tile> ^x -1
           ^y -1)
}

sp {propose*scouting
   (state <s> ^name Soar-SC
              ^io.input-link.units.unit <scv>
              ^io.input-link.fog-tiles <fog-tiles>)
   (<scv> ^scouting 1
          ^idle 1
          ^id <scv-id>)
-->
   (<s> ^operator <start-scouting> + >)
   (<start-scouting> ^name scouting
                     ^id <scv-id>)
}

#substate

sp {propose*initialize-scouting-substate
   (state <s> -^name
               ^superstate <ss>)
   (<ss> ^operator <operator>)
   (<operator> ^name scouting)
-->
   (<s> ^operator <op> + >)
   (<op> ^name init-scouting)
}

sp {apply*initialize-scouting-substate
   (state <s> ^operator.name init-scouting
              ^superstate <ss>)
   (<ss> ^operator <operator>
         ^io.input-link.units.unit <scv>)
   (<operator> ^name scouting
               ^id <scv-id>)
   (<scv> ^id <scv-id>)
-->
   (<s> ^name scouting-substate
        ^selected-unit <scv>)
}

sp {propose*find-closest-fog-tile
   (state <s> ^name scouting-substate
             -^potential-tile)
-->
   (<s> ^operator <find-closest> + =)
   (<find-closest> ^name find-closest)
}

sp {apply*find-closest-fog-tile
   (state <s> ^name scouting-substate
              ^superstate <ss>
              ^selected-unit <scv-unit>
              ^operator.name find-closest)
   (<ss> ^svs.command <commands>)
   (<scv-unit> ^svsobject <svsobject>)
-->
   (<commands> ^extract <extract-command>)
   (<extract-command> ^type closest ^a <node1> ^b <node2>)
   (<node1> ^type combine
            ^scv <scv>)
   (<node2> ^type combine)
   (<scv> ^type node ^id <svsobject>)
}

sp {apply*find-closest-fog-tile-generate-svs-command-fog-tiles
   (state <state> ^name scouting-substate
                  ^operator.name find-closest
                  ^superstate <superstate>)
   (<superstate> ^svs.command.extract <extract-command>
                 ^io.input-link <input-link>)
   (<extract-command> ^b <node2>)
   (<input-link> ^fog-tiles.tile <tile>)
   (<tile> ^svsobject <svsobject>
           ^timeout 0)
-->
   (<node2> ^tile <tile>)
   (<tile> ^type node
           ^id <svsobject>)
}

sp {propose*closest-fog-tile-to-coords-get-node
   (state <s> ^name scouting-substate
              ^superstate <ss>)
   (<ss> ^operator <scouting-operator>
         ^svs.command <command>)
   (<scouting-operator> ^name scouting)
   (<command> ^extract <extract-command>)
   (<extract-command> ^status success
                      ^result.record.params.b <potential-tile>)
   (<potential-tile> ^svsobject <svs-id>)
-->
   (<s> ^operator <result-operator> + =)
   (<result-operator> ^name closest-fog-tile-to-coords-get-node
                      ^potential-tile <tile>)
   (<tile> ^svsobject <svs-id>)
}

sp {apply*closest-fog-tile-to-coords-get-node
   (state <s> ^name scouting-substate
              ^operator <closest-fog-tile-to-coords>
              ^superstate <ss>)
   (<ss> ^svs.command <command>)
   (<closest-fog-tile-to-coords> ^name closest-fog-tile-to-coords-get-node
                                 ^potential-tile <tile>)
   (<tile> ^svsobject <svs-id>)
-->
   (<command> ^extract <extract-command>)
   (<extract-command> ^type node ^id <svs-id>)
}

sp {propose*closest-fog-tile-to-coords-get-cen
   (state <s> ^name scouting-substate
              ^superstate <ss>)
   (<ss> ^operator <scouting-operator>
         ^svs.command <command>)
   (<scouting-operator> ^name scouting)
   (<command> ^extract <extract-command>)
   (<extract-command> ^status success
                      ^result.record.params.id <node>)
-->
   (<s> ^operator> <result-operator> + =)
   (<result-operator> ^name closest-fog-tile-to-coords-get-cen
                      ^node <node>)
}

sp {apply*closest-fog-tile-to-coords-get-cen
   (state <s> ^name scouting-substate
              ^superstate <ss>
              ^operator <result-operator>)
   (<result-operator> ^name closest-fog-tile-to-coords-get-cen
                      ^node <node>)
   (<ss> ^svs.command <command>)
-->
   (<command> ^extract <extract-command>)
   (<extract-command> ^type node_centroid ^node <node>)
}

sp {rule*is-valid
   (state <s> ^superstate <ss>)
   (<ss> ^svs.command.extract <extract>)
   (<extract> ^type node_centroid
              ^status success)
-->
   (interrupt)
}

sp {apply*scouting
   (state <s> ^name Soar-SC
              ^operator <scouting>
              ^io.output-link <output-link>
              ^io.input-link <input-link>)
   (<scouting> ^name scouting
               ^id <scv-id>
               ^tile <fog-tile>)
   (<fog-tile> ^x <x>
               ^y <y>)
   (<input-link> ^units.unit <scv>)
   (<scv> ^id <scv-id>)
-->
   (<scv> ^last-scout-tile <tile>)
   (<tile> ^x <x>
           ^y <y>)
   (<output-link> ^move <command>)
   (<command> ^object <scv-id>
              ^x <x>
              ^y <y>)
}
