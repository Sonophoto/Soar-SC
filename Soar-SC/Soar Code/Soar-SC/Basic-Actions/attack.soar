#Rule for attacking enemy buildings
#Only do it if the unit is idle
sp {propose*attack-enemy-building
   (state <s> ^name Soar-SC
              ^io.input-link.enemy-units.building <enemy-unit>
              ^io.input-link.types.type <enemy-type>
              ^io.input-link.units.unit <marine>
              ^io.input-link.types.type <marine-type>
              ^io.output-link <output-link>)
   (<enemy-unit> ^id <enemy-id>
                 ^type <enemy-type-id>)
   (<enemy-type> ^id <enemy-type-id>
                 ^building 1)
   (<marine> ^type <marine-type-id>
             ^id <marine-id>
             ^idle 1
            -^scouting)
   (<marine-type> ^name |Terran_Marine|
                  ^id <marine-type-id>
                  ^my_count >= 5)
   (<output-link> -^move.object <marine-id>)
-->
   (<s> ^operator <attack-operator> + >)
   (<attack-operator> ^name attack
                      ^type building
                      ^enemy <enemy-id>
                      ^marine <marine-id>)
}                   

#Rule for attacking enemy units
#Only do it if the unit is idle
sp {propose*attack-enemy-unit
   (state <s> ^name Soar-SC
              ^io.input-link.enemy-units.unit <enemy-unit>
              ^io.input-link.types.type <enemy-type>
              ^io.input-link.units.unit <marine>
              ^io.input-link.types.type <marine-type>
              ^io.output-link <output-link>)
   (<enemy-unit> ^id <enemy-id>
                 ^type <enemy-type-id>)
   (<enemy-type> ^id <enemy-type-id>
                 ^building 0)
   (<marine> ^type <marine-type-id>
             ^id <marine-id>
             ^idle 1
            -^scouting)
   (<marine-type> ^name |Terran_Marine|
                  ^id <marine-type-id>
                  ^my_count >= 5)
   (<output-link> -^move.object <marine-id>)
-->
   (<s> ^operator <attack-operator> + >)
   (<attack-operator> ^name attack
                      ^type unit
                      ^enemy <enemy-id>
                      ^marine <marine-id>)
}

#If a unit is being targeted, and it isn't already counter attacking
#Then propose to counter attack
sp {propose*attack-enemy-unit*counter-attack
   (state <s> ^name Soar-SC
              ^io.input-link.enemy-units.<attr> <enemy-unit>
              ^io.input-link.units.unit <marine>
              ^io.input-link.types.type <marine-type>
              ^io.output-link <output-link>)
   (<enemy-unit> ^id <enemy-id>
                 ^target <marine-id>)
   (<marine> ^id <marine-id>
             ^type <marine-type-id>
            -^counter-attacking 1)
   (<marine-type> ^name |Terran_Marine|
                  ^id <marine-type-id>)
   (<output-link> -^move.object <marine-id>)
-->
   (<s> ^operator <attack-operator> + >)
   (<attack-operator> ^name attack
                      ^type unit
                      ^enemy <enemy-id>
                      ^marine <marine-id>
                      ^counter-attack 1)
}

#If an enemy unit has a target equal to a marine's id
#and the marine has that enemy's id as a target
#Then the unit is counter attacking
sp {elaboration*unit-is-counter-attacking
   (state <s> ^name Soar-SC
              ^io.input-link.enemy-units.<attr> <enemy-unit>
              ^io.input-link.units.unit <my-marine>)
   (<enemy-unit> ^id <enemy-id>
                 ^target <marine-id>)
   (<my-marine> ^id <marine-id>
                ^target <enemy-id>)
-->
   (<my-marine> ^counter-attacking 1)
}

#Apply all the attacks
sp {apply*attack
   (state <s> ^name Soar-SC
              ^operator <attack-operator>
              ^io.output-link <output-link>)
   (<attack-operator> ^name attack
                      ^enemy <enemy-id>
                      ^marine <marine-id>)
-->
   (<output-link> ^move <attack>)
   (<attack> ^object <marine-id>
             ^bwapi-object <enemy-id>
             ^type bwapi-object)
   (write |Attacking | <enemy-id> | with | <marine-id> (crlf) )
}

#Preference rules

#Preference attacking a unit over a building only if neither are counter attack operators
sp {preference*reject-attack-building-if-attack-unit
   (state <s> ^name Soar-SC
              ^operator <attack-building> +
              ^operator <attack-unit> +)
   (<attack-building> ^name attack
                      ^type building
                     -^counter-attack)
   (<attack-unit> ^name attack
                  ^type unit
                 -^counter-attack)
-->
   (<s> ^operator <attack-building> -)
}  

#Always prefer a counter-attack operator over a non-counter-attack
sp {prefernece*counter-attacking-is-best
   (state <s> ^name Soar-SC
              ^operator <attack1> +
              ^operator <other> +)
   (<attack1> ^counter-attack 1)
-->
   (<s> ^operator <other> -)
}

#All non-counter-attacks of the same type are equal
sp {preference*attacks-are-equal
   (state <s> ^name Soar-SC
              ^operator <attack1> +
              ^operator <attack2> +)
   (<attack1> ^name attack
             -^counter-attack
              ^type <type>)
   (<attack2> ^name attack
             -^counter-attack
              ^type <type>)
-->
   (<s> ^operator <attack1> = <attack2>)
}

#All counter attacks are equal regardless of type
sp {preference*counter-attacks-are-equal
   (state <s> ^name Soar-SC
              ^operator <attack1> +
              ^operator <attack2> +)
   (<attack1> ^counter-attack)
   (<attack2> ^counter-attack)
-->
   (<s> ^operator <attack1> = <attack2>)
}
