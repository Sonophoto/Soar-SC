sp {propose*build-barracks
   (state <state> ^name Soar-SC
              ^superstate nil
              ^io.input-link <input-link>
              ^io.output-link <output-link>
              ^buildings.building <building>
              ^minerals-budget <minerals-budget>
              ^gas-budget <gas-budget>)
   (<input-link> ^minerals <minerals>
                 ^units.unit <build-unit>
                 ^types.type <scv-type>
                 ^types.type <barracks-type>)
   (<scv-type> ^name |Terran_SCV|
               ^id <type-id>)
   (<build-unit> ^type <type-id>
                 ^idle <idle>
                 ^carrying <carrying>
                 ^id <id>
                -^scouting
                 ^constructing -1)
   (<barracks-type> ^name |Terran_Barracks|
                    ^id <barracks-id>
                    ^mineral-cost { <= <minerals-budget> }
                    ^gas-cost { <= <gas-budget> })
   -{(<output-link> ^build-building <build-building>)
     (<build-building> ^type <barracks-id>
                         -^status)}
-->
   (<state> ^operator <operator> + =)
   (<operator> ^name build-building
               ^worker <id>
               ^idle <idle>
               ^carrying <carrying>
#               ^location <l>
               ^type <barracks-id>)
}

#Preference rules

sp {pref*building-barracks-better-than-gather-minerals
   (state <s> ^operator <o1> +
              ^operator <o2> +
              ^io.input-link.types.type <t>)
   (<t> ^name |Terran_Barracks|
        ^id <type-id>)
   (<o1> ^name build-building
         ^type <type-id>)
   (<o2> ^name gather-minerals)
-->
   (<s> ^operator <o1> > <o2>)
}